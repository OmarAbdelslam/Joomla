// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mobile_Market.Models.DBwork;

#nullable disable

namespace Suq_com.Migrations
{
    [DbContext(typeof(dbcontext))]
    [Migration("20240115170448_InitializFirst")]
    partial class InitializFirst
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mobile_Market.Models.Departement", b =>
                {
                    b.Property<int>("depoNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("depoNo"));

                    b.Property<string>("depoName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("depoNo");

                    b.ToTable("departements");
                });

            modelBuilder.Entity("Mobile_Market.Models.Employee", b =>
                {
                    b.Property<int>("empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("empid"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HireDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("empName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("empPhone")
                        .HasColumnType("int");

                    b.HasKey("empid");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Mobile_Market.Models.Member", b =>
                {
                    b.Property<string>("memberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bdate")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("phone")
                        .HasMaxLength(12)
                        .HasColumnType("int");

                    b.Property<string>("questionsecurte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("memberId");

                    b.ToTable("members");
                });

            modelBuilder.Entity("Mobile_Market.Models.Order", b =>
                {
                    b.Property<int>("orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderid"));

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<int>("empid1")
                        .HasColumnType("int");

                    b.Property<string>("memberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("orderDate")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("orderTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("orderid");

                    b.HasIndex("empid1");

                    b.HasIndex("memberId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Mobile_Market.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandNamberdepoNo")
                        .HasColumnType("int");

                    b.Property<string>("CountryMake")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("WarrantyPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandNamberdepoNo");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Mobile_Market.Models.orderDetials", b =>
                {
                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("itemnumberId")
                        .HasColumnType("int");

                    b.Property<int>("orderdetialsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderdetialsID"));

                    b.Property<int>("orderid")
                        .HasColumnType("int");

                    b.HasIndex("itemnumberId");

                    b.HasIndex("orderid");

                    b.ToTable("orderDetials");
                });

            modelBuilder.Entity("Mobile_Market.Models.Order", b =>
                {
                    b.HasOne("Mobile_Market.Models.Employee", "empid")
                        .WithMany()
                        .HasForeignKey("empid1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mobile_Market.Models.Member", "MemberId")
                        .WithMany()
                        .HasForeignKey("memberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MemberId");

                    b.Navigation("empid");
                });

            modelBuilder.Entity("Mobile_Market.Models.Product", b =>
                {
                    b.HasOne("Mobile_Market.Models.Departement", "BrandNamber")
                        .WithMany()
                        .HasForeignKey("BrandNamberdepoNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrandNamber");
                });

            modelBuilder.Entity("Mobile_Market.Models.orderDetials", b =>
                {
                    b.HasOne("Mobile_Market.Models.Product", "itemnumber")
                        .WithMany()
                        .HasForeignKey("itemnumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mobile_Market.Models.Order", "orderId")
                        .WithMany()
                        .HasForeignKey("orderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("itemnumber");

                    b.Navigation("orderId");
                });
#pragma warning restore 612, 618
        }
    }
}
